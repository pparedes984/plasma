/*
 * File: app/view/pnlMuestrasViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('plasma.view.pnlMuestrasViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.pnlmuestras',

    onBtnNuevoMuestraClick: function(button, e, eOpts) {
        if(!Ext.getCmp('pnlNuevoMuestra'))
        {
            Ext.getCmp('pnlCentral').removeAll();
            var win = Ext.create('plasma.view.pnlNuevoMuestra');
            ME.getView().down('#pnlCentral').add(win);
            win.show();
            Ext.getCmp('txtAnalista').setValue(USUARIO);
            Ext.getCmp('txtAnalista1').setValue(USUARIO);
            var strInstitucion = Ext.getStore('Institucion');

            strInstitucion.proxy.extraParams={
                bandera :1
            };
            strInstitucion.load();
            var strKit = Ext.getStore('Kit');

            strKit.proxy.extraParams={
                bandera :1
            };
            strKit.load();
            var strCodigo = Ext.getStore('Codigo');
            strCodigo.load();
            I = 0;
            ID = 'null';
            VOLUMEN = null;




        }
    },

    onTableItemDblClick: function(dataview, record, item, index, e, eOpts) {
        if(!Ext.getCmp('pnlNuevoMuestra'))
        {
            var grid = Ext.getCmp('grdMuestras');
            var arrayKeys = grid.getSelectionModel().selected.items;
            var indice = grid.getSelectionModel().selectionStartIdx;
            ID = arrayKeys[0].data.id;
            VOLUMEN = arrayKeys[0].data.volumen;
            Ext.getCmp('pnlCentral').removeAll();
            var win = Ext.create('plasma.view.pnlNuevoMuestra');
            ME.getView().down('#pnlCentral').add(win);
            win.show();
            var strInstitucion = Ext.getStore('Institucion');

            strInstitucion.proxy.extraParams={
                bandera :1
            };
            strInstitucion.load();
            var strKit = Ext.getStore('Kit');

            strKit.proxy.extraParams={
                bandera :1
            };
            strKit.load();
            var strCodigo = Ext.getStore('Codigo');
            strCodigo.load();
            I = 0;



            Ext.Ajax.request({
                url: '../servidor/plasma/muestramarcador/obtener',
                method:"post",
                params: {
                    muestra: ID
                },
                success: function( result, request ) {
                    var responseData = Ext.JSON.decode(result.responseText);
                    if(responseData.success)
                    {
                        for (var i=1; i<responseData.data[0].contador; i++){
                            var panel = Ext.create('Ext.panel.Panel', {
                                margin: '10 10 10 10',
                                layout : {
                                    type  : 'vbox',
                                    pack  : 'center',
                                    align : 'middle'
                                },

                                items:[

                                {
                                    xtype: 'combobox',
                                    id: 'cbMarcador'+I,
                                    fieldLabel: 'Marcador Serológico',
                                    name: 'marcador',
                                    allowBlank: false,
                                    editable: false,
                                    displayField: 'nombre',
                                    queryMode: 'local',
                                    store: 'Marcador',
                                    valueField: 'id'
                                },
                                {
                                    xtype: 'textfield',
                                    id: 'txtAbsCol'+I,
                                    fieldLabel: 'Abs/COl',
                                    name: 'abs_co',
                                    allowBlank: false
                                }

                                ],
                                renderTo: Ext.getBody()
                            });

                            I=I+1;
                            Ext.getCmp('frmRecepcion1').add(panel);


                        }


                        //console.log(responseData.data[0]);

                    }
                    else
                    {
                        Ext.Msg.alert('Alerta','No hay información sobre la muestra');
                    }
                },

                failure: function(response, opts) {
                    console.log('server-side failure with status code ' + response.status);
                }
            });


            Ext.Ajax.request({
                url: '../servidor/plasma/muestra/obtener',
                method:"post",
                params: {
                    muestra: ID
                },
                success: function( result, request ) {
                    var responseData = Ext.JSON.decode(result.responseText);
                    if(responseData.success)
                    {
                        var rcptDate1=new Date(responseData.data[0].fecha_ingreso);
                        var fecha1 = Ext.Date.format(rcptDate1, 'Y-m-d');

                        var rcptDate2=new Date(responseData.data[0].fecha_transformacion);
                        var fecha2 = Ext.Date.format(rcptDate2, 'Y-m-d');

                        Ext.getCmp('txtAnalista').setValue(responseData.data[0].usuario_recepcion);
                        Ext.getCmp('txtFechaRecepcion').setValue(fecha1);
                        Ext.getCmp('cbInstitucion').setValue(responseData.data[0].institucion);
                        Ext.getCmp('txtCodInstitucional').setValue(responseData.data[0].id);
                        Ext.getCmp('cbKitM').setValue(responseData.data[0].kit);
                        Ext.getCmp('txtCasaM').setValue(responseData.data[0].b);
                        Ext.getCmp('txtUbicacion').setValue(responseData.data[0].ubicacion);
                        Ext.getCmp('txtUbicacionPlasmoteca').setValue(responseData.data[0].ubicacion_plasmoteca);
                        Ext.getCmp('txtAnalista1').setValue(responseData.data[0].usuario_transformacion);
                        Ext.getCmp('cbStatus').setValue(responseData.data[0].estatus);
                        Ext.getCmp('txtFechaTransformacion').setValue(fecha2);
                        Ext.getCmp('txtLocalizacion').setValue(responseData.data[0].localizacion_transformacion);
                        Ext.getCmp('txtUbicacionSeroteca').setValue(responseData.data[0].ubicacion_seroteca);
                        Ext.getCmp('txtVolumen').setValue(responseData.data[0].volumen);


                    }
                    else
                    {
                        Ext.Msg.alert('Alerta','No hay información sobre la muestra');
                    }
                },

                failure: function(response, opts) {
                    console.log('server-side failure with status code ' + response.status);
                }
            });



        }
    }

});
