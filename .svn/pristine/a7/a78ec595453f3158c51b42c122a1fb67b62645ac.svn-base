/*
 * File: app/view/pnlNuevoMuestraViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('plasma.view.pnlNuevoMuestraViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.pnlnuevomuestra',

    onCbInstitucionSelect: function(combo, record, eOpts) {
        Ext.Ajax.request({
            method: 'post',
            url: '../servidor/plasma/muestra/getcodigo',
            success: function (response, options) {
                var responseData = Ext.JSON.decode(response.responseText);
                Ext.getCmp('txtCodInstitucional').setValue(responseData.data[0].codigo);
            }
        });
    },

    onCbKitMSelect: function(combo, record, eOpts) {


        Ext.Ajax.request({
            method: 'post',
            url: '../servidor/plasma/casacomercial/getCasa',
            params: {
                casa: record.data.casa_comercial,
            },
            success: function (response, options) {
                var responseData = Ext.JSON.decode(response.responseText);
                //console.log(responseData.data[0].nombre);
                Ext.getCmp('txtCasaM').setValue(responseData.data[0].nombre);
            }
        });
    },

    onBtnMarcadorMasClick: function(button, e, eOpts) {



        var panel = Ext.create('Ext.panel.Panel', {
            margin: '10 10 10 10',
            layout : {
                type  : 'vbox',
                pack  : 'center',
                align : 'middle'
            },

            items:[

            {
                xtype: 'combobox',
                id: 'cbMarcador'+I,
                fieldLabel: 'Marcador Serol贸gico',
                name: 'marcador',
                allowBlank: false,
                editable: false,
                displayField: 'nombre',
                queryMode: 'local',
                store: 'Marcador',
                valueField: 'id'
            },
            {
                xtype: 'textfield',
                id: 'txtAbsCol'+I,
                fieldLabel: 'Abs/COl',
                name: 'abs_co',
                allowBlank: false
            }

            ],
            renderTo: Ext.getBody()
        });

        I=I+1;
        Ext.getCmp('frmRecepcion1').add(panel);


    },

    onBtnMarcadorMenosClick: function(button, e, eOpts) {
        if(I === 0){
            Ext.Msg.alert('Atenci贸n','Debe ingresar al menos un marcador');
        }
        else{
            I--;
            Ext.getCmp('cbMarcador'+I).destroy();
            Ext.getCmp('txtAbsCol'+I).destroy();
        }


    },

    onBtnGuardarMuestraClick: function(button, e, eOpts) {
        var forma = Ext.getCmp('frmRecepcion').getForm();
        var forma1 = Ext.getCmp('frmRecepcion1').getForm();
        if(forma.isValid() && forma1.isValid()){


            Ext.Ajax.request({
                url: '../servidor/plasma/muestra/verificar',
                method:"post",
                params: {

                    muestra: ID
                },
                success: function( result, request ) {
                    var responseData = Ext.JSON.decode(result.responseText);
                    if(responseData.success)
                    {
                        var me = this;
                        var forma = Ext.getCmp('frmRecepcion').getForm();

                        if (forma.isValid()) {
                            var values = forma.getValues();
                            Ext.Ajax.request({
                                url: '../servidor/plasma/muestra/updatemuestra',
                                method:"post",
                                params: {
                                    muestra: ID,
                                    data: Ext.encode(values),
                                },
                                success: function( result, request ) {
                                    var responseData = Ext.JSON.decode(result.responseText);
                                    if(responseData.success)
                                    {

                                        var forma1 = Ext.getCmp('frmRecepcion1').getForm();

                                        if (forma1.isValid()) {
                                            var values1 = forma1.getValues();
                                            Ext.Ajax.request({
                                                url: '../servidor/plasma/muestramarcador/update',
                                                method:"post",
                                                params: {
                                                    data: Ext.encode(values1),
                                                    id: ID
                                                },
                                                success: function( result, request ) {
                                                    var responseData = Ext.JSON.decode(result.responseText);
                                                    if(responseData.success)
                                                    {

                                                    }
                                                    else
                                                    {
                                                        Ext.Msg.alert('Alerta','Faltan datos');
                                                    }
                                                },

                                                failure: function(response, opts) {
                                                    console.log('server-side failure with status code ' + response.status);
                                                }
                                            });

                                        }
                                        else
                                        {
                                            Ext.Msg.alert('Atenci贸n','Los datos son incorrectos o se encuentran incompletos');

                                        }
                                        Ext.Msg.alert('Aviso','Se ha actulizado la muestra');


                                    }
                                    else
                                    {
                                        Ext.Msg.alert('Alerta','Faltan datos');
                                    }
                                },

                                failure: function(response, opts) {
                                    console.log('server-side failure with status code ' + response.status);
                                }
                            });

                        }
                        else
                        {
                            Ext.Msg.alert('Atenci贸n','Los datos son incorrectos o se encuentran incompletos');

                        }
                    }
                    else
                    {
                        var me = this;
                        var forma = Ext.getCmp('frmRecepcion').getForm();

                        if (forma.isValid()) {
                            var values = forma.getValues();
                            Ext.Ajax.request({
                                url: '../servidor/plasma/muestra/guardar',
                                method:"post",
                                params: {
                                    data: Ext.encode(values),
                                },
                                success: function( result, request ) {
                                    var responseData = Ext.JSON.decode(result.responseText);
                                    if(responseData.success)
                                    {
                                        Ext.Ajax.request({
                                            url: '../servidor/plasma/muestra/getUltimo',
                                            method:"post",
                                            success: function( result, request ) {
                                                var responseData = Ext.JSON.decode(result.responseText);
                                                if(responseData.success)
                                                {
                                                    ID = responseData.data[0].ultimo;
                                                    var forma1 = Ext.getCmp('frmRecepcion1').getForm();

                                                    if (forma1.isValid()) {
                                                        var values1 = forma1.getValues();
                                                        Ext.Ajax.request({
                                                            url: '../servidor/plasma/muestramarcador/guardar',
                                                            method:"post",
                                                            params: {
                                                                data: Ext.encode(values1),
                                                                id: ID
                                                            },
                                                            success: function( result, request ) {
                                                                var responseData = Ext.JSON.decode(result.responseText);
                                                                if(responseData.success)
                                                                {

                                                                }
                                                                else
                                                                {
                                                                    Ext.Msg.alert('Alerta','Faltan datos');
                                                                }
                                                            },

                                                            failure: function(response, opts) {
                                                                console.log('server-side failure with status code ' + response.status);
                                                            }
                                                        });

                                                    }
                                                    else
                                                    {
                                                        Ext.Msg.alert('Atenci贸n','Los datos son incorrectos o se encuentran incompletos');

                                                    }
                                                    Ext.Msg.alert('Aviso','Se ha guardado la muestra');



                                                }
                                                else
                                                {
                                                    Ext.Msg.alert('Alerta','Error');
                                                }
                                            },

                                            failure: function(response, opts) {
                                                console.log('server-side failure with status code ' + response.status);
                                            }
                                        });


                                    }
                                    else
                                    {
                                        Ext.Msg.alert('Alerta','Faltan datos');
                                    }
                                },

                                failure: function(response, opts) {
                                    console.log('server-side failure with status code ' + response.status);
                                }
                            });

                        }
                        else
                        {
                            Ext.Msg.alert('Atenci贸n','Los datos son incorrectos o se encuentran incompletos');

                        }
                    }
                },

                failure: function(response, opts) {
                    console.log('server-side failure with status code ' + response.status);
                }
            });
        }
        else
        {
            Ext.Msg.alert('Atenci贸n','Los datos son incorrectos o se encuentran incompletos');
        }
    },

    onBtnCancelarMuestraClick: function(button, e, eOpts) {
        if(!Ext.getCmp('pnlMuestras'))
        {
            Ext.getCmp('pnlCentral').removeAll();
            var win = Ext.create('plasma.view.pnlMuestras');
            Ext.getCmp('pnlCentral').add(win);
            win.show();
            var strMuestra = Ext.getStore('Muestra');
            strMuestra.removeAll();

            strMuestra.load();
        }
    },

    onBtnAgregarSueroClick1: function(button, e, eOpts) {
        if(ID=== 'null'){
            Ext.Msg.alert('Aviso','Debe realizar primero la recepeci贸n de la muestra');
        }
        else{
            var forma = Ext.getCmp('frmPlasma').getForm(),
                store = Ext.getStore('Pruebas');
            if (forma.isValid()) {
                var values = forma.getValues();
                Ext.Ajax.request({
                    url: '../servidor/plasma/kit/getParametro',
                    method:"post",
                    params: {
                        id: Ext.getCmp('cbKitSuero1').getValue()
                    },
                    success: function( result, request ) {
                        var responseData = Ext.JSON.decode(result.responseText);
                        if(responseData.success)
                        {
                            values['casa_comercial']= responseData.data[0].casa_comercial;
                            Ext.Ajax.request({
                                url: '../servidor/plasma/pruebas/create',
                                method:"post",
                                params: {
                                    bandera:1,
                                    data: Ext.encode(values),
                                    muestra: ID
                                },
                                success: function( result, request ) {
                                    var responseData = Ext.JSON.decode(result.responseText);
                                    if(responseData.success)
                                    {

                                        Ext.Msg.alert('Aviso','Se ha ingresado la informaci贸n');

                                        Ext.getCmp('frmPlasma').reset();
                                        var store = Ext.getStore('Pruebas');

                                        store.proxy.extraParams={
                                            bandera :2,
                                            id:ID
                                        };
                                        store.load();

                                    }
                                    else
                                    {
                                        Ext.Msg.alert('Alerta','Faltan datos');
                                    }
                                },

                                failure: function(response, opts) {
                                    console.log('server-side failure with status code ' + response.status);
                                }
                            });

                        }
                        else
                        {
                            Ext.Msg.alert('Alerta','Faltan datos');
                        }
                    },

                    failure: function(response, opts) {
                        console.log('server-side failure with status code ' + response.status);
                    }
                });
            }
            else
            {
                Ext.Msg.alert('Atenci贸n','Los datos son incorrectos o se encuentran incompletos');

            }
        }

    },

    onBtnEliminarSueroClick1: function(button, e, eOpts) {
        var g = Ext.getCmp('grdPruebasSuero1');
        var arrayKeys = g.getSelectionModel().selected.items;
        var indice = g.getSelectionModel().selectionStartIdx;
        if(arrayKeys.length === 0)
        Ext.Msg.alert('Error', 'Debe escoger un registro');
        else
        {
            var store = g.getStore();
            var rec = g.selection;
            store.remove(rec);
            store.sync(
            {
                params:{
                    id: rec.data.id
                },
                success: function(batch, success)
                {
                    store.commitChanges();
                    store.load();
                    Ext.Msg.alert('Alerta', 'Se ha eliminado el registro exitosamente');
                },

                failure: function(batch, success)
                {
                    Ext.Msg.alert('Error', 'Hubor un error');
                }
            });

        }
    },

    onPlasmaAfterRender: function(component, eOpts) {
        var store = Ext.getStore('Pruebas');

        store.proxy.extraParams={
            bandera :2,
            id:ID
        };
        store.load();
    },

    onCbInstitucionSelect1: function(combo, record, eOpts) {
        Ext.Ajax.request({
            method: 'post',
            url: '../servidor/plasma/muestra/getcodigo',
            success: function (response, options) {
                var responseData = Ext.JSON.decode(response.responseText);
                Ext.getCmp('txtCodInstitucional').setValue(responseData.data[0].codigo);
            }
        });
    },

    onBtnGuardarMuestraClick1: function(button, e, eOpts) {

        if(ID === 'null'){
            Ext.Msg.alert('Aviso','Debe realizar primero la recepeci贸n de la muestra');
        }
        else{
            var forma = Ext.getCmp('frmTransformacion').getForm();
            if (forma.isValid()) {
                var values = forma.getValues();


                Ext.Ajax.request({
                    url: '../servidor/plasma/muestra/updateMuestra',
                    method:"post",
                    params: {
                        muestra: ID,
                        data: Ext.encode(values)
                    },
                    success: function( result, request ) {
                        var responseData = Ext.JSON.decode(result.responseText);
                        if(responseData.success)
                        {

                            Ext.Msg.alert('Aviso','Se ha ingresado la informaci贸n');
                        }
                        else
                        {
                            Ext.Msg.alert('Alerta','Faltan datos');
                        }
                    },

                    failure: function(response, opts) {
                        console.log('server-side failure with status code ' + response.status);
                    }
                });

            }
            else
            {
                Ext.Msg.alert('Alerta','Faltan datos');
            }

        }

    },

    onBtnCancelarMuestraClick1: function(button, e, eOpts) {
        if(!Ext.getCmp('pnlMuestras'))
        {
            Ext.getCmp('pnlCentral').removeAll();
            var win = Ext.create('plasma.view.pnlMuestras');
            Ext.getCmp('pnlCentral').add(win);
            win.show();
            var strMuestra = Ext.getStore('Muestra');
            strMuestra.removeAll();

            strMuestra.load();
        }
    },

    onSueroAfterRender: function(component, eOpts) {
        var store = Ext.getStore('Pruebas');

        store.proxy.extraParams={
            bandera :1,
            id:ID
        };
        store.load();
    },

    onBtnAgregarSueroClick: function(button, e, eOpts) {
        if(ID === 'null'){
            Ext.Msg.alert('Aviso','Debe realizar primero la recepeci贸n de la muestra');
        }
        else{
            var forma = Ext.getCmp('frmSuero').getForm(),
                store = Ext.getStore('Pruebas');
            if (forma.isValid()) {
                var values = forma.getValues();
                Ext.Ajax.request({
                    url: '../servidor/plasma/kit/getParametro',
                    method:"post",
                    params: {
                        id: Ext.getCmp('cbKitSuero').getValue()
                    },
                    success: function( result, request ) {
                        var responseData = Ext.JSON.decode(result.responseText);
                        if(responseData.success)
                        {
                            values['casa_comercial']= responseData.data[0].casa_comercial;
                            Ext.Ajax.request({
                                url: '../servidor/plasma/pruebas/create',
                                method:"post",
                                params: {
                                    data: Ext.encode(values),
                                    muestra: ID
                                },
                                success: function( result, request ) {
                                    var responseData = Ext.JSON.decode(result.responseText);
                                    if(responseData.success)
                                    {

                                        Ext.Msg.alert('Aviso','Se ha ingresado la informaci贸n');

                                        Ext.getCmp('frmSuero').reset();
                                        var store = Ext.getStore('Pruebas');

                                        store.proxy.extraParams={
                                            bandera :1,
                                            id:ID
                                        };
                                        store.load();

                                    }
                                    else
                                    {
                                        Ext.Msg.alert('Alerta','Faltan datos');
                                    }
                                },

                                failure: function(response, opts) {
                                    console.log('server-side failure with status code ' + response.status);
                                }
                            });

                        }
                        else
                        {
                            Ext.Msg.alert('Alerta','Faltan datos');
                        }
                    },

                    failure: function(response, opts) {
                        console.log('server-side failure with status code ' + response.status);
                    }
                });
            }
            else
            {
                Ext.Msg.alert('Atenci贸n','Los datos son incorrectos o se encuentran incompletos');

            }
        }

    },

    onBtnEliminarSueroClick: function(button, e, eOpts) {
        var g = Ext.getCmp('grdPruebasSuero');
        var arrayKeys = g.getSelectionModel().selected.items;
        var indice = g.getSelectionModel().selectionStartIdx;
        if(arrayKeys.length === 0)
        Ext.Msg.alert('Error', 'Debe escoger un registro');
        else
        {
            var store = g.getStore();
            var rec = g.selection;
            store.remove(rec);
            store.sync(
            {
                params:{
                    id: rec.data.id
                },
                success: function(batch, success)
                {
                    store.commitChanges();
                    store.load();
                    Ext.Msg.alert('Alerta', 'Se ha eliminado el registro exitosamente');
                },

                failure: function(batch, success)
                {
                    Ext.Msg.alert('Error', 'Hubor un error');
                }
            });

        }
    },

    onBtnAgregarSituacionClick: function(button, e, eOpts) {
        if(Ext.getCmp('txtVolumenSituacion').getValue()-Ext.getCmp('txtVolumenUsar').getValue()>=0){
            var forma = Ext.getCmp('frmSituacion').getForm(),
                store = Ext.getStore('Situacion');
            if (forma.isValid()) {
                var values = forma.getValues();
                Ext.Ajax.request({
                    url: '../servidor/plasma/situacion/create',
                    method:"post",
                    params: {
                        data: Ext.encode(values),
                        muestra: ID
                    },
                    success: function( result, request ) {
                        var responseData = Ext.JSON.decode(result.responseText);
                        if(responseData.success)
                        {

                            Ext.Ajax.request({
                                url: '../servidor/plasma/muestra/updateSituacion',
                                method:"post",
                                params: {
                                    volumen: Ext.getCmp('txtVolumenSituacion').getValue()-Ext.getCmp('txtVolumenUsar').getValue(),
                                    muestra: ID,
                                    situacion: Ext.getCmp('cbSituacionSituacion').getValue()
                                },
                                success: function( result, request ) {
                                    var responseData = Ext.JSON.decode(result.responseText);
                                    if(responseData.success)
                                    {

                                        Ext.Msg.alert('Aviso','Se ha ingresado la informaci贸n');
                                        VOLUMEN = Ext.getCmp('txtVolumenSituacion').getValue()-Ext.getCmp('txtVolumenUsar').getValue();
                                        Ext.getCmp('frmSituacion').reset();
                                        var store = Ext.getStore('Situacion');

                                        store.proxy.extraParams={
                                            id:ID
                                        };
                                        store.load();

                                        Ext.getCmp('txtVolumenSituacion').setValue(VOLUMEN);

                                    }
                                    else
                                    {
                                        Ext.Msg.alert('Alerta','Faltan datos');
                                    }
                                },

                                failure: function(response, opts) {
                                    console.log('server-side failure with status code ' + response.status);
                                }
                            });

                        }
                        else
                        {
                            Ext.Msg.alert('Alerta','Faltan datos');
                        }
                    },

                    failure: function(response, opts) {
                        console.log('server-side failure with status code ' + response.status);
                    }
                });
            }
            else
            {
                Ext.Msg.alert('Atenci贸n','Los datos son incorrectos o se encuentran incompletos');

            }
        }
        else
        {
            Ext.Msg.alert('Atenci贸n','No hay volumen suficiente.');
        }
    },

    onBtnEliminarSituacionClick: function(button, e, eOpts) {
        var g = Ext.getCmp('grdSituacion');
        var arrayKeys = g.getSelectionModel().selected.items;
        var indice = g.getSelectionModel().selectionStartIdx;
        if(arrayKeys.length === 0)
        Ext.Msg.alert('Error', 'Debe escoger un registro');
        else
        {
            var store = g.getStore();
            var rec = g.selection;
            store.remove(rec);
            store.sync(
            {
                params:{
                    id: rec.data.id
                },
                success: function(batch, success)
                {
                    store.commitChanges();
                    store.load();
                    Ext.Msg.alert('Alerta', 'Se ha eliminado el registro exitosamente');
                },

                failure: function(batch, success)
                {
                    Ext.Msg.alert('Error', 'Hubor un error');
                }
            });

        }
    },

    onSituacionAfterRender: function(component, eOpts) {
        var store = Ext.getStore('Situacion');

        store.proxy.extraParams={
            id:ID
        };
        store.load();
        Ext.getCmp('txtVolumenSituacion').setValue(VOLUMEN);

    }

});
